services:
  web:
    build: .
    command: gunicorn --bind 0.0.0.0:8000 order_system.wsgi:application

    ports:
      - "8000:8000"
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - PYTHONPATH=/app
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    volumes:
      - static_volume:/app/static
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_NAME_DB}
      POSTGRES_USER: ${POSTGRES_USER_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER_NAME} -d ${POSTGRES_NAME_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
    depends_on:
      - web

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A order_system worker --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app/
    healthcheck:
      test: [ "CMD", "celery", "-A", "order_system", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  static_volume: